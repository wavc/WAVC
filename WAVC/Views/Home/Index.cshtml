@using WAVC.Models;
@{
    ViewData["Title"] = "Home Page";
}
<script>
    var minLen = 2;
    function SendAJAX(httpMethod, url) {
        var ajax = new XMLHttpRequest();
        var promise = new Promise(onResponse =>
            ajax.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    onResponse(this.responseText);
                }
            });
        ajax.open(httpMethod, url, true);
        ajax.send();
        return promise;
    }

    async function Search() {
        var friendReqURL = "Home/FriendRequest";
        var q = document.getElementById("search").value;
        if (q.length >= minLen) {
            var result = await SendAJAX("GET", "/Home/Search?query=" + q)
            console.log(result.length);
            var list = JSON.parse(result);
            console.log(list);
            var res = "";
            for (var i = 0; i < list.length; i++) {
                res += "<a href=\"" + friendReqURL + "?id=" + list[i].id + "\">" + list[i].name + " " + list[i].surname + "</a><br>";
            }
            document.getElementById("results").innerHTML = res;

        }
    }
</script>
Search
<input id="search" onkeyup="Search()" />
<div id="results">
</div>

<br />
Requests:
@foreach (var user in (List<ApplicationUser>)ViewBag.FriendRequests)
{
    <form action="Home/AcceptRequest">
        <input name="id" value="@user.Id" hidden />
        @user.Name @user.Surname<br />
        <input type="radio" name="result" value="yes" /> Yes
        <input type="radio" name="result" value="no" /> No<br />
        <input type="submit" value="Accept request" />
    </form>
}
<br />
Friends:
<ul>
    @foreach (var friend in (List<ApplicationUser>)ViewBag.Friends)
    {
        <li><a href="/Home/Index/@friend.Name.@friend.Surname">@friend.Name @friend.Surname</a></li>
    }
</ul>

@if(ViewBag.friend!=null)
{
    <span>Delete @ViewBag.friend.Name @ViewBag.friend.Surname</span>
}